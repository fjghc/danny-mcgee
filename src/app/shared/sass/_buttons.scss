.btn {
  position: relative;
  z-index: 1;
  border: 2px solid transparent;
  border-radius: 0;
  padding: 10px 30px;
  font-weight: 400;
  text-transform: uppercase;
  cursor: pointer;
  outline: none !important;
}

.btn-sm {
  border-width: 1px;
  padding: 8px 24px;
  font-size: 14px;
}

.btn-container > .btn {
  margin-right: 10px;
  margin-bottom: 10px;

  &:last-child {
    margin-right: 0;
    margin-bottom: 0;
  }
}

@each $key, $value in $theme-colors {
  .btn-#{$key} {
    background-color: transparent;
    color: $gray-lightest;
    border-color: $gray-lighter;
    opacity: 1;
    @include transition(0.12s, linear, background-color, color, border-color, opacity);

    &::before {
      content: ' ';
      display: block;
      width: 0;
      @include absolute(0, 50%, 0, 50%);
      z-index: -1;
      background-color: $value;
      @include transition(0.12s, ease-in, width, right, left);
    }

    &:hover:not(:disabled), &:focus:not(:disabled) {
      background-color: transparent;
      border-color: $value;
      color: map-get($contrast-color, $key);
      @if (map-get($contrast-color, $key) != #fff) {
        font-weight: 500;
        // compensate for difference in text size between weights
        @supports (-webkit-appearance: none) {
          letter-spacing: -0.001527em; // chrome
        }
        @supports (-moz-appearance: meterbar) {
          letter-spacing: -0.0016em; // firefox
        }
      }

      &::before {
        width: 100%;
        @include position(null, 0, null, 0);
        @include transition(0.12s, ease-out, width, right, left);
      }
    }

    &:focus {
       box-shadow: 0 0 0 4px transparentize($value, 0.5);
    }

    &:disabled {
      opacity: 0.5;
      cursor: default;
      pointer-events: none;
    }
  }
}

